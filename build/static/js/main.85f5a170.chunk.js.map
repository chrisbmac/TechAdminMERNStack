{"version":3,"sources":["Home/Home.tsx","Tools/Toolkit.ts","AddCourse/AddCourse.tsx","DeleteCourse/DeleteCourse.tsx","EditCourse/EditCourse.tsx","EditTechnology/EditTechnology.tsx","Error/Error.tsx","LoadingOverlay/LoadingOverlay.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","technologies","all_courses","visible","history","useHistory","className","style","display","name","type","onClick","push","value","map","data","n","_id","code","sendJSONData","sendScript","jsonString","success","failure","xmlhttp","XMLHttpRequest","console","log","addEventListener","e","status","responseText","open","setRequestHeader","send","AddCourse","collection","useParams","React","useState","state_course_name","setState_NewAdd_Course_Name","state_course_code","setState_NewAdd_Course_Code","state_tech_name","setState_tech_name","state_tech_description","setState_tech_description","state_tech_difficulty","setState_tech_difficulty","state_tech_courseArray","setState_tech_courseArray","state_form_Validation","setState_form_validation","submitAdd","sendString","JSON","stringify","onSuccess","onError","message","checkFormInputCourses","trim","add_tech_name","target","checkFormInput","add_tech_description","add_tech_difficulty","add_tech_courses","cb_value","split","courseToAdd","checked","filter","item","length","id","placeholder","onChange","disabled","defaultValue","min","max","DeleteCourse","useLocation","pathname","delete_courseArray","find","delete_technologiesArray","submitDelete","deleteJSONData","EditCourse","edit_Course","state_category_name","setState_New_Category_Name","formValidation","submitEdit","EditTechnology","edit_Technology","state_technology_name","setState_New_technology_Name","state_technology_description","setState_New_technology_Description","state_technology_difficulty","setState_New_technology_Difficulty","existingCourses_ForTechs","courses","state_array_items","setState_array_items","Array","isArray","cb_technologies_edit_courses","checkbox","mySplit","cb_ItemToAdd","description","difficulty","toString","tech","Error","LoadingOverlay","enabled","bgColor","spinnerColor","styles","backgroundColor","color","height","width","timeout","App","onResponse","result","setTechnologies","setAll_Courses","setLoading","loading","useEffect","fetch","then","response","json","catch","err","path","exact","render","Fragment","component","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85f5a170.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.scss';\r\nimport './Home.scss';\r\n//import \"./../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Technology, ViewProps, AllCourses } from '../Tools/data.model';\r\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n//import {ViewProps} from \"./../Tools/data.model\";\r\n\r\nconst Home = ({technologies, all_courses,visible}:ViewProps):JSX.Element => {\r\n    const history:any = useHistory();\r\n    \r\n    // Home component \r\n    return (\r\n        <div className=\"container\" style={{display: (visible ? 'flex' : 'none')}}>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    <div>Technologies\r\n                        <input name=\"view\" type=\"submit\" onClick={() => history.push(\"/AddCourse/technologies\")} value=\"Add\"/>\r\n                    </div>\r\n                        {technologies.map((data:Technology, n:number):JSX.Element => {\r\n                            return (\r\n                                <div key={n}>\r\n                                    <input name=\"view\" type=\"submit\" onClick={() => history.push(`/Delete/${data._id}/technologies`)} value=\"Delete\"/>\r\n                                    <input name=\"view\" type=\"submit\" onClick={() => history.push(`/EditTechnology/${data._id}`)} value=\"Edit\"/>\r\n                                    <p>{data.name}</p>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"col-sm\">\r\n                    <div className=\"divider\"></div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div>Courses\r\n                        <input name=\"view\" type=\"submit\" onClick={() => history.push(\"/AddCourse/all_courses\")} value=\"Add\"/>\r\n                    </div>\r\n                \r\n                    {all_courses.map((data:AllCourses, n:number):JSX.Element => {\r\n                        return (\r\n                            <div key={n}>\r\n                                <input name=\"view\" type=\"submit\" onClick={() => history.push(`/Delete/${data._id}/all_courses`)} value=\"Delete\"/>\r\n                                <input name=\"view\" type=\"submit\" onClick={() => history.push(`/EditCourse/${data._id}`)} value=\"Edit\"/>\r\n                                <p>{data.code} | {data.name}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                \r\n                </div>\r\n        </div>\r\n      \r\n    )\r\n}\r\nexport default Home;","// randomly generates a number between the range of low and high\nfunction getRandom(low:number = 1, high:number = 10):number {\n    let randomNumber:number;\n    // calculate random number\n    randomNumber = Math.round(Math.random() * (high - low)) + low;\n    // returning value\n    return randomNumber;\n}\n\nfunction addKey(functionToCall:Function, myKeyCode:string = \"Enter\"):void {\n    // this example exposes issue with scoping and event handlers and how it is solved with arrow function\n\n    // wire up event listener\n    document.addEventListener(\"keydown\", (e:KeyboardEvent) => {\n        // is the key released the provided key? Check keyCode via Event object\n        if (e.code === myKeyCode) {\n            // pressing the enter key will force some browsers to refresh\n            // this command stops the event from going further\n            e.preventDefault();\n            // call provided callback to do everything else that needs to be done\n            functionToCall();\n            // this also helps the event from propagating in some browsers\n            return false;\n        }\n    });\n}\n\nfunction getXMLData(retrieveScript:string, success:Function, failure:Function):void {\n    // send out AJAX request\n    let xmlhttp:XMLHttpRequest = new XMLHttpRequest();\n    xmlhttp.addEventListener(\"load\", (e:Event) => {\n        // has the response been received successfully?\n        if (xmlhttp.status === 200) {\n            // data retrieved - call success method and pass along XML object response\n            success(xmlhttp.responseXML);\n        } else {\n            failure();\n        }\n    });\n    xmlhttp.addEventListener(\"error\", (e:Event) => {\n        failure();\n    });\n    xmlhttp.open(\"GET\", retrieveScript, true);\n    xmlhttp.send();\n}\n\nfunction sendJSONData(sendScript:string, jsonString:string, success:Function, failure:Function):void {\n    // send out AJAX request\n    let xmlhttp:XMLHttpRequest = new XMLHttpRequest();\n    console.log(\"inside toolkit\" + \" \"+ sendScript + \" \" + jsonString);\n    xmlhttp.addEventListener(\"load\", (e:Event) => {\n        // has the response been received successfully?\n        if (xmlhttp.status === 200) {\n            // data retrieved - call success method and pass along XML object response\n            success(xmlhttp.responseText);\n        } else {\n            failure();\n        }\n    });\n    xmlhttp.addEventListener(\"error\", (e:Event) => {\n        failure();\n    });\n    xmlhttp.open(\"POST\", sendScript, true);\n    // setting the content-type of the request so the server knows what format that data is coming as\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlhttp.send(jsonString);\n}\n\nfunction deleteJSONData(sendScript:string, jsonString:string, success:Function, failure:Function):void {\n    // send out AJAX request\n    let xmlhttp:XMLHttpRequest = new XMLHttpRequest();\n    console.log(\"inside toolkit\" + \" \"+ sendScript + \" \" + jsonString);\n    xmlhttp.addEventListener(\"load\", (e:Event) => {\n        // has the response been received successfully?\n        if (xmlhttp.status === 200) {\n            // data retrieved - call success method and pass along XML object response\n            success(xmlhttp.responseText);\n        } else {\n            failure();\n        }\n    });\n    xmlhttp.addEventListener(\"error\", (e:Event) => {\n        failure();\n    });\n    xmlhttp.open(\"DELETE\", sendScript, true);\n    // setting the content-type of the request so the server knows what format that data is coming as\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlhttp.send(jsonString);\n}\n\nfunction getJSONData(retrieveScript:string, success:Function, failure:Function):void {\n    fetch(retrieveScript)\n        .then((response:Response) => response.json())\n        .then((data:any) => success(data))\n        .catch((err:Error) => failure());\n}\n\nexport {getRandom, addKey, getXMLData, sendJSONData, getJSONData, deleteJSONData};","import React from 'react';\r\nimport '../App.scss';\r\nimport './AddCourse.scss';\r\n//import \"./../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport { useParams , useHistory} from 'react-router-dom';\r\nimport {ViewProps, Course, AllCourses} from \"../Tools/data.model\";\r\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\r\nimport {sendJSONData} from \"./../Tools/Toolkit\";\r\n\r\nconst SUBMIT_TO_SERVER:string = \"http://ec2-54-198-207-67.compute-1.amazonaws.com/add\";\r\n//const SUBMIT_TO_SERVER:string = \"http://localhost:8080/add\";\r\nconst AddCourse = ({technologies, all_courses,visible}:ViewProps):JSX.Element => {\r\n    const history:any = useHistory();\r\n\r\n    let { collection } = useParams<{collection:string}>();\r\n    //console.log(\"This is collection in add\" + collection);\r\n    // for adding course\r\n    let [state_course_name ,setState_NewAdd_Course_Name] = React.useState<string>(\"\");\r\n    let [state_course_code ,setState_NewAdd_Course_Code] = React.useState<string>(\"\");\r\n    \r\n    // for adding tech\r\n    let [state_tech_name, setState_tech_name] = React.useState<string>(\"\");\r\n    let [state_tech_description, setState_tech_description] = React.useState<string>(\"\");\r\n    let [state_tech_difficulty, setState_tech_difficulty] = React.useState<number>(1);\r\n    let [state_tech_courseArray, setState_tech_courseArray] = React.useState<Course[]>([]);\r\n\r\n    // form validation boolean\r\n    let [state_form_Validation, setState_form_validation] = React.useState<boolean>(true);\r\n    \r\n    //--------------On btn submit - send data to server as json\r\n    const submitAdd = () => {\r\n        // Send one object for both collections and pick out what we need in server\r\n        \r\n        let sendString:Object = {\r\n            \"collection_type\": collection,\r\n            \"code\": state_course_code,\r\n            \"name\": state_course_name,\r\n            \"techName\": state_tech_name,\r\n            \"description\": state_tech_description,\r\n            \"difficulty\": state_tech_difficulty,\r\n            \"courses\":\r\n                state_tech_courseArray\r\n        };\r\n        // string of json to send to server\r\n        let sendIT:string = JSON.stringify(sendString);\r\n        \r\n        sendJSONData(SUBMIT_TO_SERVER, sendIT, onSuccess,onError);    \r\n    };\r\n\r\n    const onSuccess = (message:string):void => {\r\n        console.log(\"it was success\" + message);\r\n    };\r\n    const onError = (message:string):void => {\r\n        //setCommentLoading(true);\r\n        console.log(\"*** Error has occured during AJAX data transmission: \" + message)};\r\n\r\n    //------------On change events/ handle new values to add for course code and name\r\n    // for adding courses\r\n    const add_course_name = (e:any):void => {\r\n        setState_NewAdd_Course_Name(e.target.value);\r\n        checkFormInputCourses();\r\n    };\r\n\r\n    const add_course_code = (e:any):void => {\r\n        setState_NewAdd_Course_Code(e.target.value);\r\n        checkFormInputCourses();\r\n    };\r\n    const checkFormInputCourses = ():void => {\r\n        state_form_Validation = true;\r\n        if(state_course_name && state_course_name.trim() && state_course_code && state_course_code.trim()) {\r\n            state_form_Validation = false;\r\n            \r\n        } else {\r\n            state_form_Validation = true;\r\n           \r\n        }\r\n        setState_form_validation(state_form_Validation);\r\n    };\r\n\r\n    //---------------------for adding techs\r\n    const add_tech_name = (e:any):void => {\r\n        setState_tech_name(e.target.value);\r\n        checkFormInput();\r\n    };\r\n    const add_tech_description = (e:any):void => {\r\n        setState_tech_description(e.target.value);\r\n        checkFormInput();\r\n    };\r\n    const add_tech_difficulty = (e:any):void => {\r\n        setState_tech_difficulty(e.target.value);\r\n        checkFormInput();\r\n    };\r\n    const add_tech_courses = (e:any):void => {\r\n        \r\n        let cb_value = e.target.value.split(\"|\");\r\n        let courseToAdd = {\r\n            \"code\": cb_value[0],\r\n            \"name\": cb_value[1]\r\n        };\r\n        let checkbox:any = e.target;\r\n        if(checkbox.checked){\r\n            state_tech_courseArray.push(courseToAdd);\r\n        } else {\r\n            state_tech_courseArray = state_tech_courseArray.filter(item => item.code !== courseToAdd.code);\r\n            setState_tech_courseArray(state_tech_courseArray);\r\n        }\r\n        checkFormInput();\r\n    };\r\n    \r\n    const checkFormInput = ():void => {\r\n        state_form_Validation = false;\r\n        if(state_tech_name && state_tech_name.trim() && state_tech_description && state_tech_description.trim() && state_tech_difficulty > 0 && state_tech_difficulty < 6 && state_tech_courseArray.length > 0){\r\n            state_form_Validation = false;     \r\n        } else {\r\n            state_form_Validation = true; \r\n        }\r\n        setState_form_validation(state_form_Validation);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\" style={{display: (visible ? 'flex' : 'none')}}>\r\n            {collection === \"all_courses\" ? \r\n            <div className=\"col\">\r\n                <h3>Add New Course:</h3>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <strong>Course Code:</strong>\r\n                        <input className=\"form-control\" id=\"editCourse_placeHolder_courseName\" type=\"text\" placeholder=\"Enter New Course Code\" onChange={add_course_code}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <strong>Course Name:</strong>\r\n                        <input className=\"form-control\" id=\"editCourse_placeHolder_courseName\" type=\"text\" placeholder=\"Enter New Course Name\" onChange={add_course_name}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input name=\"addcpurse\" disabled={state_form_Validation} type=\"submit\" onClick={() => {submitAdd();history.push(\"/\");}} value=\"Add\"/>\r\n                        <input name=\"addcourse\" type=\"submit\" onClick={() => history.push(\"/\")} value=\"Cancel\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            :\r\n            <div className=\"col\">\r\n                <h3>Add New Technology:</h3>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <strong>Name:</strong>\r\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter a name\" onChange={add_tech_name} onClick={add_tech_name}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <strong>Description:</strong>\r\n                        <textarea className=\"form-control\" placeholder=\"Enter a description\" onChange={add_tech_description} onClick={add_tech_description}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <strong>Difficulty:</strong>\r\n                        <input className=\"form-control\" type=\"number\" defaultValue=\"1\" min=\"1\" max=\"5\" onChange={add_tech_difficulty} onClick={add_tech_difficulty}/>\r\n                    </div>\r\n                    <div className=\"form-group\"> <strong>Select new or remove courses</strong></div>\r\n                        {all_courses.map((data:AllCourses, n:number):JSX.Element => {\r\n                            return (\r\n                            <div className=\"form-check\" key={n}>\r\n                                <input  name=\"editTechs\" type=\"checkbox\" value={data.code + \"|\" + data.name}\r\n                                onClick={add_tech_courses}\r\n                                />{data.code} | {data.name}\r\n                            </div>\r\n                            );\r\n                        })}\r\n                    <div className=\"form-group\">\r\n                        <input name=\"editTechs\" type=\"submit\" disabled={state_form_Validation} onClick={() => {submitAdd();history.push(\"/\");}} \r\n                        value=\"Add\"/>\r\n                        <input name=\"editTechs\" type=\"submit\" value=\"Cancel\" onClick={() => history.push(\"/\")}/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default AddCourse;","import React from 'react';\r\nimport '../App.scss';\r\nimport './DeleteCourse.scss';\r\n//import \"./../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport { Technology, ViewProps, AllCourses } from '../Tools/data.model';\r\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\r\nimport { useHistory, useLocation, useParams} from \"react-router-dom\";\r\nimport {deleteJSONData} from \"./../Tools/Toolkit\";\r\n\r\n//const SUBMIT_TO_SERVER:string = \"http://localhost:8080/delete\";\r\nconst SUBMIT_TO_SERVER:string = \"http://ec2-54-198-207-67.compute-1.amazonaws.com/delete\";\r\nconst DeleteCourse = ({technologies, all_courses,visible}:ViewProps):JSX.Element => {\r\n    const history:any = useHistory();\r\n    const route:string = useLocation().pathname;\r\n    \r\n    let { id } = useParams<{id:string}>();\r\n    const delete_courseArray:(AllCourses | undefined) = all_courses.find(item => item._id === id);\r\n    let { collection } = useParams<{collection:string}>();\r\n    \r\n    const delete_technologiesArray:(Technology | undefined) = technologies.find(item => item._id === id);\r\n    \r\n    // on delete\r\n    const submitDelete = () => {\r\n        let sendString:Object = {\r\n            \"type_collection\" : collection,\r\n            \"id\": id    \r\n        }\r\n        // string of json to send to server\r\n        let sendIT:string = JSON.stringify(sendString);\r\n        \r\n        deleteJSONData(SUBMIT_TO_SERVER, sendIT, onSuccess,onError);\r\n    };\r\n    const onSuccess = (message:string):void => {\r\n        console.log(\"it was success\" + message);\r\n    };\r\n    const onError = (message:string):void => {\r\n        //setCommentLoading(true);\r\n        console.log(\"*** Error has occured during AJAX data transmission: \" + message)};\r\n    return (\r\n        <div className=\"col\" style={{display: (visible ? 'flex' : 'none')}}>\r\n            \r\n            {collection === \"all_courses\" ?\r\n            <div className=\"form-group\">\r\n                <h3>Are you sure you want to delete the following <i>course</i>?</h3>\r\n                <div className=\"form-group\">\r\n                \r\n                    <h3>{delete_courseArray?.code} | {delete_courseArray?.name}</h3>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"form-group\">\r\n                <h3>Are you sure you want to delete the following <i>technology</i>?</h3>\r\n                <div className=\"form-group\">\r\n                    <h3>{delete_technologiesArray?.name}</h3>\r\n                </div>\r\n            </div>\r\n            }\r\n            \r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <input name=\"view\" type=\"submit\" onClick={() => {submitDelete();history.push(\"/\");}} value=\"Delete\"/>\r\n                        <input name=\"view\" type=\"submit\" onClick={() => history.push(\"/\")} value=\"Cancel\"/>\r\n                    </div>\r\n                </form>\r\n            \r\n             \r\n        \r\n        </div>        \r\n    )\r\n}\r\nexport default DeleteCourse;","import React from 'react';\r\nimport '../App.scss';\r\nimport './EditCourse.scss';\r\n//import \"./../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport {sendJSONData} from \"./../Tools/Toolkit\";\r\nimport { ViewProps, AllCourses} from '../Tools/data.model';\r\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\r\n\r\n\r\nconst SUBMIT_TO_SERVER:string = \"http://ec2-54-198-207-67.compute-1.amazonaws.com/put\";\r\n//const SUBMIT_TO_SERVER:string = \"http://localhost:8080/put\";\r\nconst EditCourse = ({technologies, all_courses, visible}:ViewProps):JSX.Element => {\r\n    // history\r\n    const history:any = useHistory();\r\n\r\n    // Params\r\n    let { id } = useParams<{id:string}>();\r\n    let edit_Course:(AllCourses | undefined) = all_courses.find(item => item._id === id) ;\r\n    let [state_category_name, setState_New_Category_Name] = React.useState<string | undefined>(\"\");\r\n    \r\n    // form validation boolean\r\n    let [state_form_Validation, setState_form_validation] = React.useState<boolean>(true);\r\n    const new_category_name = (e:any):void => {\r\n        setState_New_Category_Name(e.target.value);\r\n        formValidation();\r\n    };\r\n\r\n    const formValidation = ():void => {\r\n        if(state_category_name && state_category_name.trim()){\r\n            state_form_Validation = false;\r\n        } else {\r\n            state_form_Validation = true;\r\n        }\r\n        setState_form_validation(state_form_Validation);\r\n    };\r\n\r\n    // send to server \r\n    const submitEdit = ():void => {\r\n        \r\n        console.log(\"edit\" + edit_Course?._id + \"this is _id\" + id + \" \" + state_category_name);\r\n        let my:string = id;\r\n        // object for sending data to server\r\n        let sendString:Object = {\r\n            \"id\": my,\r\n            \"code\": edit_Course?.code,\r\n            \"name\": state_category_name,\r\n            \"courses\":\r\n                [   \r\n                    {\r\n                        \"code\": edit_Course?.code,\r\n                        \"name\": state_category_name\r\n                    }\r\n                ]    \r\n            }\r\n        console.log(sendString);\r\n        // json string to send\r\n        let sendIT:string = JSON.stringify(sendString);\r\n        \r\n        sendJSONData(SUBMIT_TO_SERVER, sendIT, onSuccess,onError);    \r\n    };\r\n    \r\n    const onSuccess = (message:string):void => {\r\n        console.log(\"it was success\" + message);\r\n    };\r\n    const onError = (message:string):void => {\r\n        //setCommentLoading(true);\r\n        console.log(\"*** Error has occured during AJAX data transmission: \" + message)};\r\n        \r\n    return (\r\n        <div className=\"form-group\" style={{display: (visible ? 'flex' : 'none')}}>\r\n            <h3>Edit Course</h3>\r\n            <form>\r\n            <div className=\"form-group\">\r\n                Course Code:\r\n                <input type=\"text\" value={edit_Course?.code}/>\r\n                <input id=\"editCourse_placeHolder_courseName\" type=\"text\" placeholder={edit_Course?.name} onChange={new_category_name}/> \r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input name=\"view\" disabled={state_form_Validation} type=\"submit\" onClick={() => {submitEdit();history.push(\"/\");}} value=\"Edit\"/>\r\n                <input name=\"view\" type=\"submit\" onClick={() => history.push(\"/\")} value=\"Cancel\"/>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default EditCourse;","import React, { useEffect } from 'react';\r\nimport '../App.scss';\r\nimport './EditTechnology.scss';\r\n//import \"./../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useParams, useHistory, useLocation, } from 'react-router-dom';\r\nimport {sendJSONData} from \"./../Tools/Toolkit\";\r\nimport { Technology, ViewProps, AllCourses, Course } from '../Tools/data.model';\r\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\r\n\r\n//const SUBMIT_TO_SERVER:string = \"http://localhost:8080/put\";\r\nconst SUBMIT_TO_SERVER:string = \"http://ec2-54-198-207-67.compute-1.amazonaws.com/put\";\r\nconst EditTechnology = ({technologies, all_courses, visible}:ViewProps):JSX.Element => {\r\n    const history:any = useHistory();\r\n    \r\n    //Params\r\n    //Techs\r\n    let { id } = useParams<{id:string}>();\r\n    \r\n    let edit_Technology:(Technology | undefined) = technologies.find(item => item._id === id) ;\r\n    //let existing_Technology_Courses:()\r\n\r\n    let [state_technology_name, setState_New_technology_Name] = React.useState<string | undefined>(\"\");\r\n    let [state_technology_description, setState_New_technology_Description] = React.useState<string | undefined>(\"\");\r\n    let [state_technology_difficulty, setState_New_technology_Difficulty] = React.useState<number>(1);\r\n    let existingCourses_ForTechs:(Course[] | undefined) = edit_Technology?.courses.map(item => item);\r\n    \r\n    \r\n    let [state_array_items, setState_array_items] = React.useState<Course[] | undefined>([]);\r\n\r\n    // form validation boolean\r\n    let [state_form_Validation, setState_form_validation] = React.useState<boolean>(true);\r\n\r\n    // form validation\r\n    const checkFormInput = ():void => {\r\n        state_form_Validation = true;\r\n        if(state_technology_name && state_technology_name.trim() && state_technology_description && state_technology_description.trim() && state_technology_difficulty > 0 && state_technology_difficulty < 6\r\n        && Array.isArray(state_array_items) && state_array_items?.length){\r\n            state_form_Validation = false;     \r\n        } else {\r\n            state_form_Validation = true; \r\n        }\r\n        setState_form_validation(state_form_Validation);\r\n    };\r\n\r\n//---------------\r\n    const new_technology_name = (e:any):void => {\r\n        \r\n        setState_New_technology_Name(e.target.value);\r\n\r\n        checkFormInput();\r\n    };\r\n\r\n    const new_technology_description = (e:any):void => {\r\n        \r\n        setState_New_technology_Description(e.target.value);\r\n        checkFormInput();\r\n    };\r\n    \r\n    const new_technology_difficulty = (e:any):void => {\r\n        \r\n        setState_New_technology_Difficulty(e.target.value);\r\n        checkFormInput();\r\n    };\r\n    const cb_technologies_edit_courses = (e:any):void => {\r\n        \r\n        let checkbox:any = e.target;\r\n    \r\n        let mySplit:string = e.target.value.split(\"|\");\r\n        let cb_ItemToAdd:Course = { \r\n            \"code\": mySplit[0],\r\n            \"name\": mySplit[1]\r\n\r\n        };\r\n        if(checkbox.checked){\r\n           \r\n            state_array_items?.push(cb_ItemToAdd);\r\n        } else {\r\n            state_array_items = state_array_items?.filter(item => item.code !== cb_ItemToAdd.code);\r\n            \r\n        } \r\n        console.log(state_array_items);\r\n        setState_array_items(state_array_items); \r\n        checkFormInput(); \r\n    };\r\n   \r\n// ------------- for sending data to server***\r\n    const submitEdit = () => {\r\n        \r\n        let my:string = id;\r\n        \r\n        let sendString:Object = {\r\n            \"id\": my,\r\n            \"type_collection\" : \"technologies\",\r\n            \"name\": state_technology_name,\r\n            \"description\": state_technology_description,\r\n            \"difficulty\": state_technology_difficulty,\r\n            \"courses\": \r\n                    state_array_items \r\n        };\r\n\r\n        let sendIT:string = JSON.stringify(sendString);\r\n        \r\n        sendJSONData(SUBMIT_TO_SERVER, sendIT, onSuccess,onError);   \r\n        \r\n    };\r\n    \r\n    const onSuccess = (message:string):void => { \r\n        console.log(\"it was success\" + message);\r\n    };\r\n    const onError = (message:string):void => {\r\n        console.log(\"*** Error has occured during AJAX data transmission: \" + message)};\r\n\r\nreturn (\r\n    \r\n        <div className=\"container\" style={{display: (visible ? 'flex' : 'none')}}>\r\n            <div className=\"col\">\r\n                <h3>Edit Technology</h3>\r\n                <form id=\"editTechs\">\r\n                <div className=\"form-group\">\r\n                    <div>\r\n                        <strong>Name:</strong>\r\n                        <input className=\"form-control\" name=\"editTechs\" type=\"text\" placeholder={edit_Technology?.name} onChange={new_technology_name}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <strong>Description:</strong>\r\n                        <textarea className=\"form-control\" name=\"editTechs\" placeholder={edit_Technology?.description} onChange={new_technology_description}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <strong>Difficulty:</strong>\r\n                        <input className=\"form-control\" name=\"editTechs\" type=\"number\" min=\"1\" max=\"5\" placeholder={edit_Technology?.difficulty.toString()} onChange={new_technology_difficulty}/>\r\n                    </div>\r\n                </div>\r\n                \r\n                <strong>Previous Courses:</strong>\r\n                {existingCourses_ForTechs?.map((tech:Course, n:number):JSX.Element => {\r\n                    return (\r\n                        <div key={n}>\r\n                            {tech.code} | {tech.name}\r\n                        </div>\r\n\r\n                    );\r\n                })}\r\n                <div className=\"form-group\"> <strong>Select courses</strong></div>\r\n                {all_courses.map((data:AllCourses, n:number):JSX.Element => {\r\n                    return (\r\n                    <div key={n}>\r\n                        <input name=\"editTechs\" type=\"checkbox\" value={data.code + \"|\" + data.name}\r\n                        onClick={cb_technologies_edit_courses}\r\n                        />{data.code} | {data.name}\r\n                    </div>\r\n                    );\r\n                })}\r\n                <div className=\"form-group\">\r\n                    <input name=\"editTechs\" type=\"submit\" disabled={state_form_Validation} onClick={() => {submitEdit();history.push(\"/\");}} value=\"Edit\"/>\r\n                    <input name=\"editTechs\" type=\"submit\" value=\"Cancel\" onClick={() => history.push(\"/\")}/>\r\n                    \r\n                </div>\r\n                \r\n                </form>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default EditTechnology;","import React from 'react';\nimport \"./Error.scss\";\n\nconst Error = ():JSX.Element => {\n    return (\n        <div className=\"error\">\n            <div className=\"error__frown\">:(</div>\n            <div className=\"error__message\">404 Error - This routing does not exist</div>\n        </div>\n    );\n}\n\nexport default Error;","import React from 'react';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nimport './LoadingOverlay.scss';\n\ninterface LoadingOverlayProps {\n    enabled:boolean;\n    bgColor:string;\n    spinnerColor:string;\n}\n\nconst LoadingOverlay = ({enabled, bgColor, spinnerColor}:LoadingOverlayProps):JSX.Element => {\n\n    let styles:Object = {\n        backgroundColor:bgColor\n    }\n\n    return (\n        (enabled)\n        ? \n        <div className=\"loading-overlay\" style={styles}>\n            <Loader\n                type=\"TailSpin\"\n                color={spinnerColor}\n                height={50}\n                width={50}\n                timeout={5000}\n            />\n        </div>\n        : <div></div>\n    );\n}\n\nexport default LoadingOverlay;","import React from 'react';\nimport './App.scss';\nimport \"./../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\n\n// NPM Imports\nimport { Route, Switch } from 'react-router-dom';\nimport {JSONData, Technology, AllCourses} from \"./Tools/data.model\";\n\n\n// Component Imports\nimport Home from \"./Home/Home\";\nimport AddCourse from \"./AddCourse/AddCourse\";\nimport DeleteCourse from './DeleteCourse/DeleteCourse';\nimport EditCourse from './EditCourse/EditCourse';\nimport EditTechnology from './EditTechnology/EditTechnology';\nimport Error from './Error/Error';\n\n//From toolkit\nimport LoadingOverlay from './LoadingOverlay/LoadingOverlay';\nimport { getJSONData } from \"./Tools/Toolkit\";\n\n// Retrieval Data\n//const COURSE_SCRIPT:string = \"http://localhost:8080/get\";\nconst COURSE_SCRIPT:string = \"http://ec2-54-198-207-67.compute-1.amazonaws.com/get\";\nconst App = ():JSX.Element => {\n\n  //Data from server recieve both collections in one get\n  const onResponse = (result:JSONData):void => {\n    // data received from Web API\n    //console.table(result);\n    setTechnologies(result.technologies || []);\n    setAll_Courses(result.all_courses || []);\n    setLoading(false);\n  };\n  //For error\n  const onError = (message:string):void => console.log(\"*** Error has occured during AJAX data transmission: \" + message);\n  // ----------------------------------- setting state variables\n  const [technologies, setTechnologies] = React.useState<Technology[]>([]);\n  const [all_courses, setAll_Courses] = React.useState<AllCourses[]>([]);\n  // Loading\n  const [loading, setLoading] = React.useState<boolean>(true); \n  // Routing and history\n\n  React.useEffect(():void => {\n    getJSONData(COURSE_SCRIPT, onResponse, onError);\n  }, []);\n  // ----------------------------------- rendering to the DOM\n  return (\n    <div className=\"main\">\n      <LoadingOverlay bgColor=\"#2fa77f\" spinnerColor=\"#FFFFFF\" enabled={loading} />\n      \n      <div className=\"header\">\n        <div className=\"header__title\">_Technology Roster : Administration</div>\n      </div>\n      {\n        (technologies.length > 0 && all_courses.length > 0)? \n      <Switch>\n        {/*For Home - 1*/}\n          <Route path=\"/\" exact render={():JSX.Element =>\n            <React.Fragment>\n              <Home technologies={technologies} all_courses={all_courses} visible={true}/>\n              <AddCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <DeleteCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <EditCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n            </React.Fragment>\n          }\n          ></Route>\n          {/*For Add - 2*/}\n          <Route path=\"/AddCourse/:collection\" render={():JSX.Element =>\n            <React.Fragment>\n              <Home technologies={technologies} all_courses={all_courses} visible={false}/>\n              <AddCourse technologies={technologies} all_courses={all_courses} visible={true}/>\n              <DeleteCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <EditCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <EditTechnology technologies={technologies} all_courses={all_courses} visible={false}/>\n            </React.Fragment>\n          }\n          ></Route>\n          {/*For Delete - 3*/}\n          <Route path=\"/Delete/:id/:collection\" render={():JSX.Element =>\n            <React.Fragment>\n              <Home technologies={technologies} all_courses={all_courses} visible={false}/>\n              <AddCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <DeleteCourse technologies={technologies} all_courses={all_courses} visible={true}/>\n              <EditCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <EditTechnology technologies={technologies} all_courses={all_courses} visible={false}/>\n            </React.Fragment>\n          }\n          ></Route>\n          {/*For Edit Course - 4*/}\n          <Route path=\"/EditCourse/:id\" render={():JSX.Element =>\n            <React.Fragment>\n              <Home technologies={technologies} all_courses={all_courses} visible={false}/>\n              <AddCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <DeleteCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <EditCourse technologies={technologies} all_courses={all_courses} visible={true}/>\n              <EditTechnology technologies={technologies} all_courses={all_courses} visible={false}/>\n            </React.Fragment>\n          }\n          ></Route>\n          {/*For Edit Technology - 5*/}\n          <Route path=\"/EditTechnology/:id\" render={():JSX.Element =>\n            <React.Fragment>\n              <Home technologies={technologies} all_courses={all_courses} visible={false}/>\n              <AddCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <DeleteCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <EditCourse technologies={technologies} all_courses={all_courses} visible={false}/>\n              <EditTechnology technologies={technologies} all_courses={all_courses} visible={true}/>\n            </React.Fragment>\n          }\n          ></Route>\n          <Route component={Error} />\n      </Switch>\n    :\n    <div>No Data To Display</div>\n    }\n\n      <div className=\"footer\">Web App powered by <a href=\"http://mern.io\" target=\"_blank\">MERN Stack</a></div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}